{"version":3,"file":"static/js/336.2cb6e0b5.chunk.js","mappings":"kNAEO,SAAeA,EAAtB,+CAAO,OAAP,oBAAO,WAAsBC,GAAtB,gGACCC,EAAW,gCAEXC,EAAU,CACdC,SAAS,4BAAD,OAFJC,EAAQ,oCAGZC,MAAM,SAAD,mDAAgCD,EAAhC,mBACLE,QAAQ,SAAD,2DAAwCF,EAAxC,mBACPG,QAAQ,SAAD,2DAAwCH,EAAxC,0BACPI,OAAO,wBAAD,OAA0BJ,EAA1B,yFARH,kBAYoBK,EAAAA,EAAAA,IAAA,UAAaR,GAAb,OAAwBC,EAAQF,KAZpD,cAYGU,EAZH,yBAaIA,GAbJ,kCAeHC,QAAQC,MAAR,MAfG,kF,mJCAMC,EAAOC,EAAAA,EAAAA,GAAH,wHAOJC,EAAQD,EAAAA,EAAAA,GAAH,6FAMLE,EAAUF,EAAAA,EAAAA,KAAH,6C,SCkCpB,EA5Ca,WACX,OAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,YACRvB,EAAAA,EAAAA,GAAO,UAAWqB,GAASG,MAAK,SAAAC,GAC9BL,GAAU,WACR,OAAO,OAAIK,EAAMC,KAAKC,KACvB,GACF,GACF,GAAE,CAACN,KAGF,0BACE,SAACP,EAAD,UACGK,EAAOS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACV,SAAChB,EAAD,UACGgB,GACC,iCACE,gBACEC,IAAK,mCAAqCD,EAC1CE,IAAKJ,KAEP,0BACE,SAACb,EAAD,oBADF,IAC4Ba,MAE5B,0BACE,SAACb,EAAD,yBADF,IACiCc,SAInC,iCACE,gBAAKE,IAAK,kCAAmCC,IAAKJ,KAClD,kCAAUA,MACV,uCAAeC,SAlBTF,EADF,OA2BnB,C","sources":["Api/Api.jsx","components/Cast/CastStyled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport async function getApi(endpoint, ...params) {\n  const BASE_URL = 'https://api.themoviedb.org/3/';\n  const TOKEN = '54c688c0cf0b4dc9e7803df7038eeea9';\n  const END_URL = {\n    trending: `trending/all/day?api_key=${TOKEN}`,\n    movie: `movie/${params[0]}?api_key=${TOKEN}&language=en-US`,\n    credits: `movie/${params[0]}/credits?api_key=${TOKEN}&language=en-US`,\n    reviews: `movie/${params[0]}/reviews?api_key=${TOKEN}&language=en-US&page=1`,\n    search: `search/movie?api_key=${TOKEN}&language=en-US&query=${params[0]}&page=1&include_adult=false`,\n  };\n\n  try {\n    const response = await axios.get(`${BASE_URL}${END_URL[endpoint]}`);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: center;\n`;\n\nexport const Items = styled.li`\n  &:not(:nth-last-of-type(-n + 3)) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const SpanKey = styled.span`\n  font-weight: 700;\n`;\n","import { getApi } from 'Api/Api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Items, List, SpanKey } from './CastStyled';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getApi(`credits`, movieId).then(actor => {\n      setActors(() => {\n        return [...actor.data.cast];\n      });\n    });\n  }, [movieId]);\n\n  return (\n    <div>\n      <List>\n        {actors.map(({ id, name, character, profile_path }) => (\n          <Items key={id}>\n            {profile_path ? (\n              <>\n                <img\n                  src={'https://image.tmdb.org/t/p/w200/' + profile_path}\n                  alt={name}\n                />\n                <p>\n                  <SpanKey>Name:</SpanKey> {name}\n                </p>\n                <p>\n                  <SpanKey>Character:</SpanKey> {character}\n                </p>\n              </>\n            ) : (\n              <>\n                <img src={'https://placeholder.com/200x300'} alt={name} />\n                <p>Name: {name}</p>\n                <p>Character: {character}</p>\n              </>\n            )}\n          </Items>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["getApi","endpoint","BASE_URL","END_URL","trending","TOKEN","movie","credits","reviews","search","axios","response","console","error","List","styled","Items","SpanKey","useState","actors","setActors","movieId","useParams","useEffect","then","actor","data","cast","map","id","name","character","profile_path","src","alt"],"sourceRoot":""}