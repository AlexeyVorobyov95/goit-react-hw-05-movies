{"version":3,"file":"static/js/974.d16a2533.chunk.js","mappings":"kNAEO,SAAeA,EAAtB,+CAAO,OAAP,oBAAO,WAAsBC,GAAtB,gGACCC,EAAW,gCAEXC,EAAU,CACdC,SAAS,4BAAD,OAFJC,EAAQ,oCAGZC,MAAM,SAAD,mDAAgCD,EAAhC,mBACLE,QAAQ,SAAD,2DAAwCF,EAAxC,mBACPG,QAAQ,SAAD,2DAAwCH,EAAxC,0BACPI,OAAO,wBAAD,OAA0BJ,EAA1B,yFARH,kBAYoBK,EAAAA,EAAAA,IAAA,UAAaR,GAAb,OAAwBC,EAAQF,KAZpD,cAYGU,EAZH,yBAaIA,GAbJ,kCAeHC,QAAQC,MAAR,MAfG,kF,iKCAMC,EAAaC,EAAAA,EAAAA,KAAH,wFAKVC,EAAQD,EAAAA,EAAAA,MAAH,kUAiBLE,EAAYF,EAAAA,EAAAA,OAAH,uQAcTG,EAAOH,EAAAA,EAAAA,GAAH,yLASJI,EAAQJ,EAAAA,EAAAA,GAAH,yF,SCkBlB,EA3De,WACb,OAAwCK,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAOF,EAAaG,IAAb,QACPC,GAAWC,EAAAA,EAAAA,MAEjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KASMC,EAAcF,EAAMG,QAAO,qBAAGC,MAC5BC,cAAcC,SAASX,EAAKU,cADH,IAejC,OAXAE,EAAAA,EAAAA,YAAU,WACK,OAATZ,IAGJvB,EAAAA,EAAAA,GAAO,SAAD,UAAcuB,IAAQa,MAAK,SAAAC,GAC/BR,GAAS,WACP,OAAO,OAAIQ,EAAKC,KAAKC,QACtB,GACF,GACF,GAAE,CAAChB,KAGF,iCACE,UAACT,EAAD,CAAY0B,SAxBK,SAAAC,GACnBA,EAAIC,iBACAD,EAAIE,OAAO,GAAGC,MAElBtB,EAAgB,CAAEC,KAAMkB,EAAIE,OAAO,GAAGC,OACvC,EAmBG,WACE,4BACE,SAAC5B,EAAD,CAAO6B,KAAK,YAEd,SAAC5B,EAAD,CAAW4B,KAAK,SAAhB,6BAGDjB,EAAMkB,OAAS,IACd,SAAC5B,EAAD,UACGY,EAAYiB,KAAI,gBAAGC,EAAH,EAAGA,GAAIhB,EAAP,EAAOA,MAAOT,EAAd,EAAcA,KAAd,OACf,SAACJ,EAAD,UACGa,GACC,SAAC,KAAD,CAAMiB,GAAE,UAAKD,GAAME,MAAO,CAAEC,KAAM1B,GAAlC,SACGO,KAGH,SAAC,KAAD,CAAMiB,GAAE,UAAKD,GAAME,MAAO,CAAEC,KAAM1B,GAAlC,SACGF,KAPKyB,EADG,QAiB1B,C","sources":["Api/Api.jsx","page/Movies/MoviesStyled.jsx","page/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport async function getApi(endpoint, ...params) {\n  const BASE_URL = 'https://api.themoviedb.org/3/';\n  const TOKEN = '54c688c0cf0b4dc9e7803df7038eeea9';\n  const END_URL = {\n    trending: `trending/all/day?api_key=${TOKEN}`,\n    movie: `movie/${params[0]}?api_key=${TOKEN}&language=en-US`,\n    credits: `movie/${params[0]}/credits?api_key=${TOKEN}&language=en-US`,\n    reviews: `movie/${params[0]}/reviews?api_key=${TOKEN}&language=en-US&page=1`,\n    search: `search/movie?api_key=${TOKEN}&language=en-US&query=${params[0]}&page=1&include_adult=false`,\n  };\n\n  try {\n    const response = await axios.get(`${BASE_URL}${END_URL[endpoint]}`);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import styled from '@emotion/styled';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  padding-top: 50px;\n  align-items: center;\n`;\nexport const Input = styled.input`\nfont-weight: 700;\n  padding: 10px;\n  border-radius: 20px;\n  border: none;\n  width: 300px;\n  height: 40px;\n  font-size: 18px;\n  box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.75);\n  margin-right: 30px;\n  outline: none;\n  &:hover,\n  :focus {\n    box-shadow: 0px 0px 20px 0px #ffa500;\n  }\n`;\n\nexport const SearchBtn = styled.button`\n  font-weight: 700;\n  width: 150px;\n  height: 60px;\n  background-color: white;\n  padding: 10px;\n  border-radius: 20px;\n  box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.75);\n  &:hover,\n  :focus {\n    background-color: #ffa500;\n  }\n`;\n\nexport const List = styled.ul`\nmargin-top: 30px;\n  width: 360px;\n  padding: 20px;\n  border-radius: 30px;\n  box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.75);\n  background-color: #ffffff;\n`;\n\nexport const Items = styled.li`\n  font-size: 20px;\n  margin-bottom: 10px;\n  font-weight: 700;\n`;","import { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getApi } from '../../Api/Api';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Input, Items, List, SearchBtn, SearchForm } from './MoviesStyled';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const name = searchParams.get(`name`);\n  const location = useLocation();\n\n  const [films, setFilms] = useState([]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (evt.target[0].value === '') {\n    }\n    setSearchParams({ name: evt.target[0].value });\n  };\n\n  const filterFilns = films.filter(({ title }) =>\n    title.toLowerCase().includes(name.toLowerCase())\n  );\n\n  useEffect(() => {\n    if (name === null) {\n      return;\n    }\n    getApi(`search`, `${name}`).then(film => {\n      setFilms(() => {\n        return [...film.data.results];\n      });\n    });\n  }, [name]);\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit}>\n        <label>\n          <Input type=\"text\" />\n        </label>\n        <SearchBtn type=\"submit\">SEARCH FILMS</SearchBtn>\n      </SearchForm>\n\n      {films.length > 0 &&\n        <List>\n          {filterFilns.map(({ id, title, name }) => (\n            <Items key={id}>\n              {title ? (\n                <Link to={`${id}`} state={{ from: location }}>\n                  {title}\n                </Link>\n              ) : (\n                <Link to={`${id}`} state={{ from: location }}>\n                  {name}\n                </Link>\n              )}\n            </Items>\n          ))}\n        </List>\n      }\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["getApi","endpoint","BASE_URL","END_URL","trending","TOKEN","movie","credits","reviews","search","axios","response","console","error","SearchForm","styled","Input","SearchBtn","List","Items","useSearchParams","searchParams","setSearchParams","name","get","location","useLocation","useState","films","setFilms","filterFilns","filter","title","toLowerCase","includes","useEffect","then","film","data","results","onSubmit","evt","preventDefault","target","value","type","length","map","id","to","state","from"],"sourceRoot":""}