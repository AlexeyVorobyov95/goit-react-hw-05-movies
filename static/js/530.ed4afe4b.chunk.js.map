{"version":3,"file":"static/js/530.ed4afe4b.chunk.js","mappings":"kNAEO,SAAeA,EAAtB,+CAAO,OAAP,oBAAO,WAAsBC,GAAtB,gGACCC,EAAW,gCAEXC,EAAU,CACdC,SAAS,4BAAD,OAFJC,EAAQ,oCAGZC,MAAM,SAAD,mDAAgCD,EAAhC,mBACLE,QAAQ,SAAD,2DAAwCF,EAAxC,mBACPG,QAAQ,SAAD,2DAAwCH,EAAxC,0BACPI,OAAO,wBAAD,OAA0BJ,EAA1B,yFARH,kBAYoBK,EAAAA,EAAAA,IAAA,UAAaR,GAAb,OAAwBC,EAAQF,KAZpD,cAYGU,EAZH,yBAaIA,GAbJ,kCAeHC,QAAQC,MAAR,MAfG,kF,uKCCMC,EAAQC,EAAAA,EAAAA,GAAH,wFAMLC,GAAaD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,oUAiBVG,EAAYH,EAAAA,EAAAA,IAAH,0MASTI,EAAgBJ,EAAAA,EAAAA,IAAH,0CAQbK,GAJOL,EAAAA,EAAAA,EAAH,6CAIOA,EAAAA,EAAAA,IAAH,6DASRM,GAJeN,EAAAA,EAAAA,GAAH,yCAIMA,EAAAA,EAAAA,IAAH,mFAMfO,EAAaP,EAAAA,EAAAA,GAAH,wDAIVQ,EAAUR,EAAAA,EAAAA,KAAH,6CAIPS,EAAWT,EAAAA,EAAAA,GAAH,qGAORU,EAAYV,EAAAA,EAAAA,GAAH,sGAOTW,GAAkBX,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,6G,SCe5B,EA9EqB,WAAO,IAAD,IACzB,GAAwBY,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,aASlC,OAPAC,EAAAA,EAAAA,YAAU,YACRtC,EAAAA,EAAAA,GAAO,QAAS8B,GAASS,MAAK,SAAAjC,GAC5BuB,GAAQ,WACN,MAAO,CAACvB,EAAMkC,KACf,GACF,GACF,GAAE,CAACV,KAEF,iCACE,SAACd,EAAD,CAAYyB,GAAIP,EAAoBQ,QAApC,yBACA,SAAC5B,EAAD,2BAECc,EAAKe,KACJ,gBACEC,EADF,EACEA,GACAC,EAFF,EAEEA,MACAC,EAHF,EAGEA,YACAC,EAJF,EAIEA,aACAC,EALF,EAKEA,aACAC,EANF,EAMEA,SACAC,EAPF,EAOEA,OAPF,OASE,UAAChC,EAAD,YACE,UAACC,EAAD,YACE,gBACEgC,IAAK,mCAAqCL,EAC1CM,IAAI,MAGN,UAAChC,EAAD,YACE,0BACGyB,EADH,KACYE,EAAaM,MAAM,EAAG,GADlC,QAGA,0BACE,SAAC9B,EAAD,sBADF,IAC8B,UAAGyB,GAAeK,MAAM,EAAG,OAGzD,UAAChC,EAAD,YACE,SAACE,EAAD,WACE,sCAEF,SAACD,EAAD,UACG4B,EAAOP,KAAI,gBAAGC,EAAH,EAAGA,GAAIU,EAAP,EAAOA,KAAP,OACV,yBACE,uBAAIA,KADGV,EADC,UAOhB,0BACE,SAACrB,EAAD,wBADF,IACgC0B,YAIpC,UAACzB,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CAAkBe,GAAG,OAArB,qBAEF,SAAChB,EAAD,WACE,SAACC,EAAD,CAAiBe,GAAG,UAApB,2BAGJ,SAAC,EAAAc,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAzCYZ,EATlB,MAyDP,C","sources":["Api/Api.jsx","components/MovieDetails/MovieDetails.Styled.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport async function getApi(endpoint, ...params) {\n  const BASE_URL = 'https://api.themoviedb.org/3/';\n  const TOKEN = '54c688c0cf0b4dc9e7803df7038eeea9';\n  const END_URL = {\n    trending: `trending/all/day?api_key=${TOKEN}`,\n    movie: `movie/${params[0]}?api_key=${TOKEN}&language=en-US`,\n    credits: `movie/${params[0]}/credits?api_key=${TOKEN}&language=en-US`,\n    reviews: `movie/${params[0]}/reviews?api_key=${TOKEN}&language=en-US&page=1`,\n    search: `search/movie?api_key=${TOKEN}&language=en-US&query=${params[0]}&page=1&include_adult=false`,\n  };\n\n  try {\n    const response = await axios.get(`${BASE_URL}${END_URL[endpoint]}`);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Title = styled.h2`\n  font-size: 30px;\n  margin-top: 30px;\n  padding-left: 20px;\n`;\n\nexport const LinkToBack = styled(NavLink)`\n  display: block;\n  width: 100px;\n  background-color: white;\n  font-weight: 700;\n  padding: 20px;\n  margin-top: 30px;\n  border-radius: 20px;\n  font-size: 15px;\n  box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.75);\n  &:hover,\n  :focus {\n    background-color: orange;\n    color: black;\n  }\n`;\n\nexport const Container = styled.div`\n  margin-top: 20px;\n  display: block;\n  padding: 30px 20px 20px 20px;\n  background-color: white;\n  border-radius: 30px;\n  box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.75);\n`;\n\nexport const CardContainer = styled.div`\n  display: flex;\n`;\n\nexport const Text = styled.p`\n  font-weight: 700;\n`;\n\nexport const FilmInfo = styled.div`\n  margin-left: 30px;\n  gap: 20px;\n`;\n\nexport const ListCardFilm = styled.ul`\n  width: 360px;\n`;\n\nexport const ContainerGenres = styled.div`\n  display: flex;\n  gap: 10px;\n\n  margin-bottom: 20px;\n`;\nexport const ListGenres = styled.ul`\n  display: flex;\n  gap: 10px;\n`;\nexport const SpanKey = styled.span`\n  font-weight: 700;\n`;\n\nexport const InfoList = styled.ul`\n  display: flex;\n  gap: 20px;\n  margin-top: 30px;\n  margin-bottom: 20px;\n`;\n\nexport const InfoItems = styled.li`\n  font-weight: 700;\n  background-color: orange;\n  \n  border-radius: 20px;\n`;\n\nexport const LinkDetailsInfo = styled(NavLink)`\n  display: block;\n  padding: 23px;\n  &:hover,\n  :focus {\n    color: white;\n  }\n`;\n","import { getApi } from 'Api/Api';\nimport { useEffect, useState, useRef, Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport {\n  FilmInfo,\n  Container,\n  ContainerGenres,\n  LinkToBack,\n  Title,\n  SpanKey,\n  ListGenres,\n  CardContainer,\n  InfoList,\n  InfoItems,\n  LinkDetailsInfo,\n} from './MovieDetails.Styled';\n\nconst MovieDetails = () => {\n  const [film, setFilm] = useState([]);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? `/`);\n\n  useEffect(() => {\n    getApi(`movie`, movieId).then(movie => {\n      setFilm(() => {\n        return [movie.data];\n      });\n    });\n  }, [movieId]);\n  return (\n    <>\n      <LinkToBack to={backLinkLocationRef.current}>GO TO BACK</LinkToBack>\n      <Title>MovieDetails</Title>\n\n      {film.map(\n        ({\n          id,\n          title,\n          poster_path,\n          release_date,\n          vote_average,\n          overview,\n          genres,\n        }) => (\n          <Container key={id}>\n            <CardContainer>\n              <img\n                src={'https://image.tmdb.org/t/p/w200/' + poster_path}\n                alt=\"\"\n              />\n\n              <FilmInfo>\n                <h2>\n                  {title} ({release_date.slice(0, 4)})\n                </h2>\n                <p>\n                  <SpanKey>Rating:</SpanKey> {`${vote_average}`.slice(0, 3)}\n                </p>\n\n                <ContainerGenres>\n                  <SpanKey>\n                    <p>Ganres:</p>\n                  </SpanKey>\n                  <ListGenres>\n                    {genres.map(({ id, name }) => (\n                      <li key={id}>\n                        <p>{name}</p>\n                      </li>\n                    ))}\n                  </ListGenres>\n                </ContainerGenres>\n                <p>\n                  <SpanKey>Overview:</SpanKey> {overview}\n                </p>\n              </FilmInfo>\n            </CardContainer>\n            <InfoList>\n              <InfoItems>\n                <LinkDetailsInfo  to=\"cast\">Cast</LinkDetailsInfo>\n              </InfoItems>\n              <InfoItems>\n                <LinkDetailsInfo to=\"reviews\">Reviews</LinkDetailsInfo>\n              </InfoItems>\n            </InfoList>\n            <Suspense fallback={<div>Loading...</div>}>\n              <Outlet />\n            </Suspense>\n          </Container>\n        )\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["getApi","endpoint","BASE_URL","END_URL","trending","TOKEN","movie","credits","reviews","search","axios","response","console","error","Title","styled","LinkToBack","NavLink","Container","CardContainer","FilmInfo","ContainerGenres","ListGenres","SpanKey","InfoList","InfoItems","LinkDetailsInfo","useState","film","setFilm","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","then","data","to","current","map","id","title","poster_path","release_date","vote_average","overview","genres","src","alt","slice","name","Suspense","fallback"],"sourceRoot":""}